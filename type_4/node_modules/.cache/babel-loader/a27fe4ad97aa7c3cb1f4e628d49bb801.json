{"ast":null,"code":"import \"./App.css\";\nimport { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Stack from \"react-bootstrap/Stack\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Codes from \"./Codes\";\n\nfunction App() {// const [lang1, setLang1] = useState(\"\");\n  // const [lang2, setLang2] = useState(\"\");\n  // const [prog1, setProg1] = useState(\"\");\n  // const [prog2, setProg2] = useState(\"\");\n  // const [program1, setProgram1] = useState(\"\");\n  // const [program2, setProgram2] = useState(\"\");\n  // const findMatch = () => {};\n  // const handleLang1 = (e) => {\n  //   setLang1(e.target.value);\n  // };\n  // const handleLang2 = (e) => {\n  //   setLang2(e.target.value);\n  // };\n  // const handleProgram = (programName, setProg) => {\n  //   switch (programName) {\n  //     case \"cppMergeSort\":\n  //       setProg(Codes.cppMergeSort);\n  //       break;\n  //     case \"cppQuickSort\":\n  //       setProg(Codes.cppQuickSort);\n  //       break;\n  //     case \"cppSelectionSort\":\n  //       setProg(Codes.cppSelectionSort);\n  //       break;\n  //       case \"cppBubbleSort\":\n  //         setProg(Codes.cppBubbleSort);\n  //         break;\n  //     case \"cppInsertionSort\":\n  //       setProg(Codes.cppInsertionSort);\n  //       break;\n  //     case \"javaBubbleSort\":\n  //       setProg(Codes.javaBubbleSort);\n  //       break;\n  //     case \"javaInsertionSort\":\n  //       setProg(Codes.javaInsertionSort);\n  //       break;\n  //     case \"javaMergeSort\":\n  //       setProg(Codes.javaMergeSort);\n  //       break;\n  //     case \"javaQuickSort\":\n  //       setProg(Codes.javaQuickSort);\n  //       break;\n  //     case \"javaSelectionSort\":\n  //       setProg(Codes.javaSelectionSort);\n  //       break;\n  //     case \"pythonBubbleSort\":\n  //       setProg(Codes.pythonBubbleSort);\n  //       break;\n  //     case \"pythonInsertionSort\":\n  //       setProg(Codes.pythonInsertionSort);\n  //       break;\n  //     case \"pythonMergeSort\":\n  //       setProg(Codes.pythonMergeSort);\n  //       break;\n  //     case \"pythonQuickSort\":\n  //       setProg(Codes.pythonQuickSort);\n  //       break;\n  //     case \"pythonSelectionSort\":\n  //       setProg(Codes.pythonSelectionSort);\n  //       break;\n  // };\n  // const handleProg1 = (e) => {\n  //   setProg1(e.target.value);\n  //   let programName = lang1 + e.target.value;\n  //   console.log(programName);\n  //   handleProgram(programName, setProgram1);\n  // };\n  // const handleProg2 = (e) => {\n  //   setProg2(e.target.value);\n  //   let programName = lang2 + e.target.value;\n  //   console.log(programName);\n  //   let codes = new Codes();\n  //   // setProgram2(codes.programName);\n  // };\n  // return (\n  //   <div className=\"App\">\n  //     <Container fluid>\n  //       <Row>\n  //         <Col md={12} style={{ height: \"10vh\" }}>\n  //           <Card className=\"headerCard\">\n  //             <Card.Body>\n  //               <div className=\"bg-blue-800\">\n  //                 <h1>Prototype for Type 4 Clone Detection using TestCases</h1>\n  //               </div>\n  //             </Card.Body>\n  //           </Card>\n  //         </Col>\n  //       </Row>\n  //       <Row>\n  //         <Col md={2} style={{ height: \"100vh\" }}>\n  //           <Card className=\"leftCard\">\n  //             <Card.Body>\n  //               <Stack gap={5}>\n  //                 <Form.Select\n  //                   aria-label=\"Default select example\"\n  //                   className=\"item\"\n  //                   onChange={handleLang1}\n  //                 >\n  //                   <option>Language 1</option>\n  //                   <option value=\"java\"> Java</option>\n  //                   <option value=\"cpp\">C++</option>\n  //                   <option value=\"python\">Python</option>\n  //                 </Form.Select>\n  //                 <Form.Select\n  //                   aria-label=\"Default select example\"\n  //                   className=\"item\"\n  //                   onChange={handleLang2}\n  //                 >\n  //                   <option>Language 2</option>\n  //                   <option value=\"java\">Java</option>\n  //                   <option value=\"cpp\">C++</option>\n  //                   <option value=\"python\">Python</option>\n  //                 </Form.Select>\n  //                 <Form.Select\n  //                   aria-label=\"Default select example\"\n  //                   className=\"item\"\n  //                   onChange={handleProg1}\n  //                 >\n  //                   <option>Program 1</option>\n  //                   <option value=\"MergeSort\">Merge Sort</option>\n  //                   <option value=\"SelectionSort\">Selection Sort</option>\n  //                   <option value=\"QuickSort\">Quick Sort</option>\n  //                   <option value=\"InsertionSort\">Insertion Sort</option>\n  //                   <option value=\"BubbleSort\">Bubble Sort</option>\n  //                 </Form.Select>\n  //                 <Form.Select\n  //                   aria-label=\"Default select example\"\n  //                   className=\"item\"\n  //                   onChange={handleProg2}\n  //                 >\n  //                   <option>Program 2</option>\n  //                   <option value=\"MergeSort\">Merge Sort</option>\n  //                   <option value=\"SelectionSort\">Selection Sort</option>\n  //                   <option value=\"QuickSort\">Quick Sort</option>\n  //                   <option value=\"InsertionSort\">Insertion Sort</option>\n  //                   <option value=\"BubbleSort\">Bubble Sort</option>\n  //                 </Form.Select>\n  //                 <Button variant=\"dark\" className=\"button\" onClick={findMatch}>\n  //                   Match\n  //                 </Button>\n  //               </Stack>\n  //             </Card.Body>\n  //           </Card>\n  //         </Col>\n  //         <Col md={10}>\n  //           <Row md={9}>\n  //             <Col md={6}>\n  //               <Card className=\"rightCard\">\n  //                 <Card.Body>{program1}</Card.Body>\n  //               </Card>\n  //             </Col>\n  //             <Col md={6}>\n  //               <Card className=\"rightCard\">\n  //                 <Card.Body>{program2}</Card.Body>\n  //               </Card>\n  //             </Col>\n  //           </Row>\n  //           <Row md={3}>\n  //             <Col md={12}>\n  //               <Card className=\"bottomCard\">\n  //                 <Card.Body>{/* <h1>Hellow World</h1> */}</Card.Body>\n  //               </Card>\n  //             </Col>\n  //           </Row>\n  //         </Col>\n  //       </Row>\n  //     </Container>\n  //   </div>\n  // );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/6th sem/SE/Type-4-Clone-Detection-Prototype/type-4-clone-detector/type-4/src/App.js"],"names":["useState","Container","Row","Col","Stack","Form","Card","Button","Codes","App"],"mappings":"AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,GAAe,CACbvLQA,G;AAyLT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Stack from \"react-bootstrap/Stack\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Codes from \"./Codes\";\n\nfunction App() {\n  // const [lang1, setLang1] = useState(\"\");\n  // const [lang2, setLang2] = useState(\"\");\n  // const [prog1, setProg1] = useState(\"\");\n  // const [prog2, setProg2] = useState(\"\");\n  // const [program1, setProgram1] = useState(\"\");\n  // const [program2, setProgram2] = useState(\"\");\n\n  // const findMatch = () => {};\n\n  // const handleLang1 = (e) => {\n  //   setLang1(e.target.value);\n  // };\n\n  // const handleLang2 = (e) => {\n  //   setLang2(e.target.value);\n  // };\n\n  // const handleProgram = (programName, setProg) => {\n  //   switch (programName) {\n  //     case \"cppMergeSort\":\n  //       setProg(Codes.cppMergeSort);\n  //       break;\n  //     case \"cppQuickSort\":\n  //       setProg(Codes.cppQuickSort);\n  //       break;\n  //     case \"cppSelectionSort\":\n  //       setProg(Codes.cppSelectionSort);\n  //       break;\n  //       case \"cppBubbleSort\":\n  //         setProg(Codes.cppBubbleSort);\n  //         break;\n  //     case \"cppInsertionSort\":\n  //       setProg(Codes.cppInsertionSort);\n  //       break;\n  //     case \"javaBubbleSort\":\n  //       setProg(Codes.javaBubbleSort);\n  //       break;\n  //     case \"javaInsertionSort\":\n  //       setProg(Codes.javaInsertionSort);\n  //       break;\n  //     case \"javaMergeSort\":\n  //       setProg(Codes.javaMergeSort);\n  //       break;\n  //     case \"javaQuickSort\":\n  //       setProg(Codes.javaQuickSort);\n  //       break;\n  //     case \"javaSelectionSort\":\n  //       setProg(Codes.javaSelectionSort);\n  //       break;\n  //     case \"pythonBubbleSort\":\n  //       setProg(Codes.pythonBubbleSort);\n  //       break;\n  //     case \"pythonInsertionSort\":\n  //       setProg(Codes.pythonInsertionSort);\n  //       break;\n  //     case \"pythonMergeSort\":\n  //       setProg(Codes.pythonMergeSort);\n  //       break;\n  //     case \"pythonQuickSort\":\n  //       setProg(Codes.pythonQuickSort);\n  //       break;\n  //     case \"pythonSelectionSort\":\n  //       setProg(Codes.pythonSelectionSort);\n  //       break;\n  // };\n\n  // const handleProg1 = (e) => {\n  //   setProg1(e.target.value);\n    \n  //   let programName = lang1 + e.target.value;\n  //   console.log(programName);\n\n  //   handleProgram(programName, setProgram1);\n  // };\n\n  // const handleProg2 = (e) => {\n  //   setProg2(e.target.value);\n    \n  //   let programName = lang2 + e.target.value;\n  //   console.log(programName);\n\n  //   let codes = new Codes();\n  //   // setProgram2(codes.programName);\n  // };\n\n\n\n  // return (\n  //   <div className=\"App\">\n  //     <Container fluid>\n  //       <Row>\n  //         <Col md={12} style={{ height: \"10vh\" }}>\n  //           <Card className=\"headerCard\">\n  //             <Card.Body>\n  //               <div className=\"bg-blue-800\">\n  //                 <h1>Prototype for Type 4 Clone Detection using TestCases</h1>\n  //               </div>\n  //             </Card.Body>\n  //           </Card>\n  //         </Col>\n  //       </Row>\n  //       <Row>\n  //         <Col md={2} style={{ height: \"100vh\" }}>\n  //           <Card className=\"leftCard\">\n  //             <Card.Body>\n  //               <Stack gap={5}>\n  //                 <Form.Select\n  //                   aria-label=\"Default select example\"\n  //                   className=\"item\"\n  //                   onChange={handleLang1}\n  //                 >\n  //                   <option>Language 1</option>\n  //                   <option value=\"java\"> Java</option>\n  //                   <option value=\"cpp\">C++</option>\n  //                   <option value=\"python\">Python</option>\n  //                 </Form.Select>\n  //                 <Form.Select\n  //                   aria-label=\"Default select example\"\n  //                   className=\"item\"\n  //                   onChange={handleLang2}\n  //                 >\n  //                   <option>Language 2</option>\n  //                   <option value=\"java\">Java</option>\n  //                   <option value=\"cpp\">C++</option>\n  //                   <option value=\"python\">Python</option>\n  //                 </Form.Select>\n  //                 <Form.Select\n  //                   aria-label=\"Default select example\"\n  //                   className=\"item\"\n  //                   onChange={handleProg1}\n  //                 >\n  //                   <option>Program 1</option>\n  //                   <option value=\"MergeSort\">Merge Sort</option>\n  //                   <option value=\"SelectionSort\">Selection Sort</option>\n  //                   <option value=\"QuickSort\">Quick Sort</option>\n  //                   <option value=\"InsertionSort\">Insertion Sort</option>\n  //                   <option value=\"BubbleSort\">Bubble Sort</option>\n  //                 </Form.Select>\n  //                 <Form.Select\n  //                   aria-label=\"Default select example\"\n  //                   className=\"item\"\n  //                   onChange={handleProg2}\n  //                 >\n  //                   <option>Program 2</option>\n  //                   <option value=\"MergeSort\">Merge Sort</option>\n  //                   <option value=\"SelectionSort\">Selection Sort</option>\n  //                   <option value=\"QuickSort\">Quick Sort</option>\n  //                   <option value=\"InsertionSort\">Insertion Sort</option>\n  //                   <option value=\"BubbleSort\">Bubble Sort</option>\n  //                 </Form.Select>\n  //                 <Button variant=\"dark\" className=\"button\" onClick={findMatch}>\n  //                   Match\n  //                 </Button>\n  //               </Stack>\n  //             </Card.Body>\n  //           </Card>\n  //         </Col>\n  //         <Col md={10}>\n  //           <Row md={9}>\n  //             <Col md={6}>\n  //               <Card className=\"rightCard\">\n  //                 <Card.Body>{program1}</Card.Body>\n  //               </Card>\n  //             </Col>\n  //             <Col md={6}>\n  //               <Card className=\"rightCard\">\n  //                 <Card.Body>{program2}</Card.Body>\n  //               </Card>\n  //             </Col>\n  //           </Row>\n  //           <Row md={3}>\n  //             <Col md={12}>\n  //               <Card className=\"bottomCard\">\n  //                 <Card.Body>{/* <h1>Hellow World</h1> */}</Card.Body>\n  //               </Card>\n  //             </Col>\n  //           </Row>\n  //         </Col>\n  //       </Row>\n  //     </Container>\n  //   </div>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}